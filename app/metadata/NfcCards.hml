---
kind: ObjectType
version: v1
definition:
  name: NfcCards
  fields:
    - name: id
      type: Uuid!
    - name: nfcId
      type: Text!
  graphql:
    typeName: NfcCards
    inputTypeName: NfcCardsInput
  dataConnectorTypeMapping:
    - dataConnectorName: pg_db
      dataConnectorObjectType: NFCCards
      fieldMapping:
        id:
          column:
            name: id
        nfcId:
          column:
            name: nfc_id

---
kind: TypePermissions
version: v1
definition:
  typeName: NfcCards
  permissions:
    - role: admin
      output:
        allowedFields:
          - id
          - nfcId

---
kind: BooleanExpressionType
version: v1
definition:
  name: NfcCardsBoolExp
  operand:
    object:
      type: NfcCards
      comparableFields:
        - fieldName: id
          booleanExpressionType: UuidBoolExp
        - fieldName: nfcId
          booleanExpressionType: TextBoolExp
      comparableRelationships:
        - relationshipName: assignedCards
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: NfcCardsBoolExp

---
kind: AggregateExpression
version: v1
definition:
  name: NfcCardsAggExp
  operand:
    object:
      aggregatedType: NfcCards
      aggregatableFields:
        - fieldName: id
          aggregateExpression: UuidAggExp
        - fieldName: nfcId
          aggregateExpression: TextAggExp
  count:
    enable: true
  graphql:
    selectTypeName: NfcCardsAggExp

---
kind: OrderByExpression
version: v1
definition:
  name: NfcCardsOrderByExp
  operand:
    object:
      orderedType: NfcCards
      orderableFields:
        - fieldName: id
          orderByExpression: UuidOrderByExp
        - fieldName: nfcId
          orderByExpression: TextOrderByExp
      orderableRelationships: []
  graphql:
    expressionTypeName: NfcCardsOrderByExp

---
kind: Model
version: v2
definition:
  name: NfcCards
  objectType: NfcCards
  source:
    dataConnectorName: pg_db
    collection: NFCCards
  filterExpressionType: NfcCardsBoolExp
  aggregateExpression: NfcCardsAggExp
  orderByExpression: NfcCardsOrderByExp
  graphql:
    selectMany:
      queryRootField: nfcCards
      subscription:
        rootField: nfcCards
    selectUniques:
      - queryRootField: nfcCardsByNfcId
        uniqueIdentifier:
          - nfcId
        subscription:
          rootField: nfcCardsByNfcId
      - queryRootField: nfcCardsById
        uniqueIdentifier:
          - id
        subscription:
          rootField: nfcCardsById
    filterInputTypeName: NfcCardsFilterInput
    aggregate:
      queryRootField: nfcCardsAggregate
      subscription:
        rootField: nfcCardsAggregate

---
kind: ModelPermissions
version: v1
definition:
  modelName: NfcCards
  permissions:
    - role: admin
      select:
        filter: null
        allowSubscriptions: true

---
kind: Relationship
version: v1
definition:
  name: assignedCards
  sourceType: NfcCards
  target:
    model:
      name: AssignedCards
      relationshipType: Array
      aggregate:
        aggregateExpression: AssignedCardsAggExp
  mapping:
    - source:
        fieldPath:
          - fieldName: nfcId
      target:
        modelField:
          - fieldName: nfcId
  graphql:
    aggregateFieldName: assignedCardsAggregate

